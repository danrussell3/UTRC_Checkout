@model Check_Out_App_ULC.Models.ViewModels.RepairStatusView

@{
    ViewBag.Title = "Update Repair Status";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Update Repair Status for Item <strong>#@Model.ItemUpc</strong></h3>
<p style="font-size:14px"><u>@Html.ActionLink("Return to Open Repairs", "Index", "tb_ItemRepair")</u></p>

@if (ViewBag.Message != null)
{
    <p style="font-size:20px"><mark><span>@ViewBag.Message</span></mark></p>
}

<br/>

<button class="accordion">&nbsp Update the repair checklist</button>
<div class="panel">
    <br/>
    <p>Edit checklist items here...</p>
</div>

<hr />

<button class="accordion">&nbsp Change the repair due date</button>
<div class="panel">
    

    @using (Html.BeginForm("UpdateRepairDueDate", "tb_ItemRepair", FormMethod.Post))
    {
        <div style="text-align: center;">
            <br />
            <p>The current due date for this repair is: @Model.DueDate</p>
            
            To change this, select a new due date: <input name="newDueDate" type="date">
            <br /><br/>
            <input type="hidden" name="itemUpc" value=@Model.ItemUpc />
            <input type="hidden" name="itemLoc" value=@Model.ItemLocation />
            <input type="submit" value="Submit" />
        </div>
    }

</div>

<hr />

<button class="accordion">&nbsp Close out the repair</button>
<div class="panel">
    <br />
    <p>Confirm that the repair has been completed...</p>
</div>

<script>
    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            /* Toggle between adding and removing the "active" class,
            to highlight the button that controls the panel */
            this.classList.toggle("active");

            /* Toggle between hiding and showing the active panel */
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
    }
</script>

<style>
    /* Style the buttons that are used to open and close the accordion panel */
    .accordion {
        background-color: #eee;
        color: #444;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        text-align: left;
        border: none;
        outline: none;
        transition: 0.4s;
    }

    /* Add a background color to the button if it is clicked/hovered on */
    .active, .accordion:hover {
        background-color: #ccc;
    }

    /* Style the accordion panel (hidden by default) */
    .panel {
        padding: 0 18px;
        background-color: white;
        display: none;
    }

    .accordion:after {
        content: '\02795'; /* Unicode character for "plus" sign (+) */
        font-size: 13px;
        color: #777;
        float: left;
        margin-left: 5px;
    }

    .active:after {
        content: "\2796"; /* Unicode character for "minus" sign (-) */
    }
</style>
